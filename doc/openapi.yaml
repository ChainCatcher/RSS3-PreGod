openapi: 3.0.0
info:
  description: |
    This is a simple API guide for RSS3 PreGod. You can find out more about RSS3 PreGod at [rss3.io](http://rss3.io/) or on [GitHub](https://github.com/NaturalSelectionLabs/RSS3-PreGod).
  version: "0.4.0"
  title: RSS3 PreGod API
  # termsOfService: 'http://rss3.io/terms/'
  contact:
    email: contact@rss3.io
  license:
    name: GNU Affero General Public License v3.0
    url: "https://www.gnu.org/licenses/agpl-3.0.en.html"
servers:
  - description: PreGod API Test Instance
    url: "https://test-pregod.rss3.dev/v0.4.0"
tags:
  - name: Note
    externalDocs:
      description: Find out more.
      url: "https://rss3.io/"
paths:
  "/account:{instance}@{platform}/notes":
    get:
      tags:
        - Note
      summary: Get Notes by RSS3URI.
      description: Returns a list of Notes.
      operationId: getNotesByRSS3URI
      parameters:
        - name: instance
          in: path
          description: The address of the instance.
          required: true
          example: "0xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045"
          schema:
            type: string
        - name: platform
          in: path
          description: The platform of the instance.
          required: true
          schema:
            type: string
            enum:
              - ethereum
              - solana
              - flow
              - arweave
        - name: last_identifier
          in: query
          description: The pointer used for paging.
          required: false
          schema:
            type: string
        - name: limit
          in: query
          description: Limit the number of Notes returned by the server.
          required: false
          example: 10
          schema:
            type: number
            default: 100
            maximum: 100
        - name: tags
          in: query
          description: Include Notes by tags.
          required: false
          example: "NFT"
          schema:
            type: string
        - name: exclude_tags
          in: query
          description: Filter out Notes by tags.
          required: false
          example: "POAP"
          schema:
            type: string
        # Swagger UI doesn't not render `oneOf` schema properly.
        - name: item_sources
          in: query
          description: "Include Notes by indexing sources."
          required: false
          example: "Ethereum NFT"
          schema:
            type: string
            enum:
              - Crossbell
              - Ethereum NFT
              - Solana NFT
              - Flow NFT
              - Mirror Entry
              - Gitcoin Contribution
      responses:
        "200":
          description: A valid request.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/GetResponse"
                  - $ref: "#/components/schemas/InvalidRequest"
  "/notes":
    post:
      tags:
        - Note
      summary: Get Notes by an RSS3URI list.
      description: Returns a list of Notes.
      operationId: getNotesByRSS3URIList
      requestBody:
        $ref: "#/components/requestBodies/NoteList"
      responses:
        "200":
          description: valid request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/PostResponse"
                  - $ref: "#/components/schemas/InvalidRequest"
externalDocs:
  description: Find out more about RSS3.
  url: "https://rss3.io"
components:
  schemas:
    GetResponse:
      type: object
      required:
        [
          "version",
          "date_updated",
          "identifier",
          "identifier_next",
          "total",
          "list",
        ]
      properties:
        version:
          type: string
          description: The version of the RSS3 PreGod instance.
          example: v0.4.0
        date_updated:
          $ref: "#/components/schemas/Date"
        identifier:
          type: string
          example: rss3://account:0xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045@ethereum/notes?limit=100
          description: The identifier of the current request.
        identifier_next:
          type: string
          example: rss3://account:0xd8da6bf26964af9d7eed9e03e53415d37aa96045@ethereum/notes?last_identifier=rss3%3A%2F%2Fnote%3A0x90b2a3072915d194bf8d8eea937545bb196eeb0f4894f068d334b666cf75d2bc-178-18%40ethereum&limit=100
          description: The pointer of the current request.
        total:
          type: number
          example: 123
          description: The total number of Notes indexed for the instance.
        list:
          type: array
          description: The requested Notes.
          items:
            $ref: "#/components/schemas/Note"
    PostResponse:
      type: object
      required: ["version", "date_updated", "identifier_next", "total", "list"]
      properties:
        version:
          type: string
          description: The version of the RSS3 PreGod instance.
          example: v0.4.0
        date_updated:
          $ref: "#/components/schemas/Date"
        identifier_next:
          type: string
          example: rss3://account:0xd8da6bf26964af9d7eed9e03e53415d37aa96045@ethereum/notes?last_identifier=rss3%3A%2F%2Fnote%3A0x90b2a3072915d194bf8d8eea937545bb196eeb0f4894f068d334b666cf75d2bc-178-18%40ethereum&limit=100
          description: The pointer of the current request.
        total:
          type: number
          example: 123
          description: The total number of Notes indexed for the instance.
        list:
          type: array
          description: The requested Notes.
          items:
            $ref: "#/components/schemas/Note"
    InvalidRequest:
      type: object
      required: [code, error]
      properties:
        code:
          type: integer
          example: 0
          format: int32
        error:
          type: string
          example: "no router"
      description: Returns when an invalid request was received.
    Date:
      type: string
      description: Conform to the RFC3339 Datetime format.
      format: date-time
      example: "2022-01-19T02:06:38.000Z"
    Note:
      type: object
      required:
        [
          identifier,
          date_created,
          date_updated,
          related_urls,
          tags,
          authors,
          summary,
          attachments,
          source,
        ]
      properties:
        identifier:
          type: string
          example: "rss3://asset:0xb9619cf4f875cdf0e3ce48b28a1c725bc4f6c0fb-1800@ethereum"
        date_created:
          $ref: "#/components/schemas/Date"
        date_updated:
          $ref: "#/components/schemas/Date"
        related_urls:
          type: array
          items:
            type: string
            example:
              [
                "https://etherscan.io/nft/0xb9619cf4f875cdf0e3ce48b28a1c725bc4f6c0fb/1800",
                "https://opensea.io/assets/0xb9619cf4f875cdf0e3ce48b28a1c725bc4f6c0fb/1800",
              ]
        tags:
          type: array
          items:
            type: string
            example: ["NFT"]
        authors:
          type: array
          items:
            type: string
            example:
              [
                "rss3://account:0xC8b960D09C0078c18Dcbe7eB9AB9d816BcCa8944@ethereum",
              ]
        summary:
          type: string
          example: "Here we go. https://t.co/DyyJsje3SR"
        attachments:
          type: array
          items:
            $ref: "#/components/schemas/Attachments"
        source:
          $ref: "#/components/schemas/Metadata"
      description: A Note representing an action or an event generated by the instance.
    Attachments:
      type: object
      required: [type, address, mime_type]
      properties:
        type:
          type: string
          example: "object"
        address:
          type: string
          example: "ipfs://bafybeicij6vw6xcsgwldofnmmh3c3j4w5yiocs6l72yubpbcldxcglkvqe/rss3-whitepaper-no-1800.glb"
        content:
          type: string
          example: '{"Author(s)":"Natural Selection Labs","Edition":"First Edition","Edition Language":"English","File Format":"PDF","No.":1800,"date":1610323200}'
        mime_type:
          type: string
          example: "model/gltf-binary"
        size_in_bytes:
          type: number
          example: 3983376
    Metadata:
      type: object
      required: [network, proof]
      properties:
        network:
          type: string
          example: "Ethereum"
        proof:
          type: string
          example: "0xb9619cf4f875cdf0e3ce48b28a1c725bc4f6c0fb-1800"
        token_standard:
          type: string
          example: "ERC-721"
        token_id:
          type: string
          example: "1800"
        token_symbol:
          type: string
          example: "RWP"
        collection_address:
          type: string
          example: "0xb9619cf4f875cdf0e3ce48b28a1c725bc4f6c0fb"
        collection_name:
          type: string
          example: "RSS3 Whitepaper"
  requestBodies:
    NoteList:
      description: Retrieve a list of notes belonging to the supplied list of RSS3URIs.
      required: true
      content:
        application/json:
          schema:
            required: ["addresses"]
            properties:
              addresses:
                type: array
                description: The list of RSS3URIs
                example:
                  [
                    "rss3://account:0xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045@ethereum",
                    "rss3://account:0x827431510a5D249cE4fdB7F00C83a3353F471848@ethereum",
                  ]
              last_identifier:
                type: string
                description: The pointer used for paging.
                example: "rss3://note:0x5175b715019267bf8bcf37f95129c0ff400129eee675cdf261907701ac2da568-295-22@ethereum"
              limit:
                type: number
                description: Limit the number of notes returned by the server.
                default: 100
                maximum: 100
                example: 10
              tags:
                type: array
                description: Include notes by tags.
                example: ["NFT"]
              exclude_tags:
                type: array
                description: Filter out notes by tags.
                example: ["POAP"]
              item_sources:
                type: array
                description: "Include Notes by indexing sources."
                example: ["Ethereum NFT"]
                enum:
                  - Crossbell
                  - Ethereum NFT
                  - Solana NFT
                  - Flow NFT
                  - Mirror Entry
                  - Gitcoin Contribution
